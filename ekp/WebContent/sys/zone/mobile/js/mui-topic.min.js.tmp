require({cache:{
'sys/zone/mobile/js/address/AddressZoneItemListMixin':function(){
define([
    "dojo/_base/declare",
	"mui/list/_TemplateItemListMixin",
	"sys/zone/mobile/js/address/AddressZoneItemMixin"
	], function(declare, _TemplateItemMixin, AddressZoneItemMixin) {
	
	return declare("sys.zone.mobile.js.address.AddressZoneItemListMixin", [_TemplateItemMixin], {
		
		itemRenderer : AddressZoneItemMixin
		
	});
});
},
'sys/zone/mobile/js/NavSwapView':function(){
define( [ 'dojo/_base/declare', 'dojo/_base/lang', 'dojo/topic',
		'dojo/_base/array', "dojo/query", 'dojox/mobile/View', 'dojo/request',"dojo/request/script",
		"mui/util", 'dojox/mobile/viewRegistry', 'dojo/dom-construct',
		"dojo/dom-style", "dojo/dom-class", 'dojo/dom-attr','dojo/touch',
		'dojox/mobile/Tooltip' ], function(declare, lang, topic, array,
		query, View, request, script, util, viewRegistry, domConstruct, domStyle,
		domClass, domAttr,touch, Tooltip) {

	return declare('sys.zone.mobile.js.NavSwapView', [ View ],
			{
		
				currentServerKey : "",
		
				refNavBar : null,

				userId : "",

				criHandle : null,
				
				criSelectedClass : "selected",
				
				postCreate : function() {
					this.inherited(arguments);
					this
							.subscribe('/mui/nav/onComplete',
									'handleNavOnComplete');
					this.subscribe('/mui/navitem/_selected',
							'handleNavOnSelected');
					
					this.subscribe("/sys/zone/loadCri", 'changeCriInfo');
					this.subscribe("/sys/zone/criChanged", 'changeCri');
					
					this.subscribe("/mui/list/adjustDestination", lang.hitch(this,
							this.hideOpener));
					this.subscribe('/mui/list/loaded', "_wirteNum");
					
					this.subscribe("/mui/list/pushDomHide" , "onPushDomHide");
				},

				handleNavOnComplete : function(widget, items) {
					this.refNavBar = widget;
					//this.generateSwapList(widget.getChildren());
					this.refNavBar.getChildren()[0].setSelected();
				},

				handleNavOnSelected : function(obj, evt) {
					//首页处理
					if(obj.id=="home") {
						this._handleHomeView(obj, evt);
					} else {
						this._handleListView(obj, evt);
					}
				},
				
				_criShowHide : function(showString) {
					query(".mui_zone_cri").forEach(
							function(_item) {
								domStyle.set(_item, "display", showString);
							});
				},
				
				//处理首页
				_handleHomeView : function(obj, evt) {
					this._criShowHide("none");
					this._toTop();
					if(!this.baseInfoView)
						this.baseInfoView = this.getChildren()[0];
					if(this.list) {
						this.list.isLoadMore = false;
						domStyle.set(this.list.domNode, "display" , "none");
					}
					this.baseInfoView.show();
					topic.publish("/mui/list/pushDomHide", this);
				},
				//处理list
				_handleListView : function(obj, evt) {
					var self = this;
					if (!this.criHandle) {
						//this.criBtnDom = query(".mui_zone_cri_btn")[0];
						this.criHandle = this.connect(document.body, "click",
								this._criBtnonclick);
					}
					this._toTop();
					if (!obj.criInfo) {
						if(this.currentServerKey != 'null' && this.currentServerKey != obj.key) {
							script.get(util.formatUrl(obj.serverPath + evt.url),{
										jsonp : "jsonpcallback",
										timeout : 5000
									}).then(
									function(response) {
										obj.criInfo = response;
										obj.criInfo.key = obj.key;
										obj.criInfo.serverPath = obj.serverPath;
										self._initList(obj.criInfo, obj.key, obj.serverPath);
									},function(err) {
									});
						} else {
							request.get(util.formatUrl(evt.url), {
								handleAs : "json"
							}).then( function(response) {
								obj.criInfo = response;
								self._initList(obj.criInfo);
							}, function(err) {
							});
						}
					} else {
						self._initList(obj.criInfo);
					}
				},
				//选中某个标签，初始化筛选项和列表
				_initList : function(arr, key, serverPath) {
					if (!this.list) {
						this.list = this.getChildren()[1];
					}
					if(this.baseInfoView)
						this.baseInfoView.hide();
					domStyle.set(this.list.domNode, "display" , "");
					this.list.isLoadMore = true;
					this._criShowHide("");
					var criSelectIndex = 0;
					for ( var i = 0; i < arr.length; i++) {
						var item = arr[i];
						if (item.isDefault == true) {
							criSelectIndex = i;
							query(".mui_zone_selected_text").forEach(
									function(_item) {
										_item.innerText = util
												.formatText(item.text);
									});
							var url = util.urlResolver(item.url, {
								userId : this.userId
							});
							if(arr.key && this.currentServerKey != arr.key) {
								if("jsonp" != this.list.dataType) {
									this.list.store = null;
									this.list.dataType = "jsonp";
								}
								this.list.url = util.formatUrl(arr.serverPath + url);
							} else {
								if("json" != this.list.dataType) {
									this.list.store = null;
									this.list.dataType = "json";
								}
								this.list.url = util.formatUrl(url);
							}
							array.forEach(this.list.getChildren(), function(child){
								child.destroyRecursive();
							});
							topic.publish('/mui/list/pushDomShow',this);
							this.list.reload();
							break;
						}
					}
					topic.publish("/sys/zone/loadCri", this, {
						info : arr,
						criSelectIndex : criSelectIndex
					});
				},

				changeCriInfo : function(obj, evt) {
					if (!this.openerContainer) {
						this.openerContainer = new Tooltip();
						domConstruct.place(this.openerContainer.domNode,
								document.body, "last");
						domClass.add(this.openerContainer.domNode,
								'mui_zone_tip');
						var cover = this.openerContainer.containerNode;

						this.tabGroupContainer = domConstruct.create('div', {
							className : 'mui_zone_container'
						}, cover);
						
						this.connect(this.tabGroupContainer, "click", '_criClick');

					}
					if (evt.info) {
						this.criInfo = evt.info;
						var criSelectIndex = evt.criSelectIndex;
						var arr = this.criInfo;
						domConstruct.empty(this.tabGroupContainer);
						for ( var i = 0; i < this.criInfo.length; i++) {
							var _cri = domConstruct.create("span", {
								'className' : 'mui_zone_cri_item_text' 
										+ ((criSelectIndex === i) ? (" " + this.criSelectedClass) : ""),
								'innerHTML' : arr[i].text ? arr[i].text : "",
								'data-cri-index' : i
							});
							domConstruct.place(_cri, this.tabGroupContainer,
									"last");
						}
					}
				},
				
				// 筛选项点击事件
				_criClick : function(evt) {
					var target = evt.target;
					while (target && target != this.tabGroupContainer) {
						var index = domAttr.get(target, "data-cri-index");
						if (index >= 0) {
							this._toTop();
							topic.publish("/sys/zone/criChanged", this, {
								selectIndex : index
							});
							break;
						}
						target = target.parentNode;
					}
				},

				changeCri : function(obj, evt) {
					if (evt.selectIndex >= 0) {
						this._toTop();
						var cInfo = this.criInfo[evt.selectIndex];
						query(".mui_zone_selected_text").forEach(
								function(item, index, arr) {
									item.innerText = util
											.formatText(cInfo.text);
								});
						query(".knowledge_num").forEach(
								function(item, index, arr) {
									item.innerHTML = "";
								});
						var url = util.urlResolver(cInfo.url, {
							userId : this.userId
						});
						if(this.criInfo.key && this.criInfo.key != this.currentServerKey) {
							this.list.dataType = "jsonp";
							this.list.url = util.formatUrl(this.criInfo.serverPath + url);
						} else {
							this.list.dataType = "json";
							this.list.url = util.formatUrl(url);
						}
						array.forEach(this.list.getChildren(), function(child){
							child.destroyRecursive();
						});
						topic.publish('/mui/list/pushDomShow',this);
						this.list.reload();
						this.defer(function(){
							this.hideOpener();
						},100);
						
						this._criSelectedChange(evt.selectIndex);
					}

				},
				
				_criSelectedChange : function(index) {
					if(this.openerContainer) {
						domClass.remove(query("." + this.criSelectedClass, this.openerContainer.domNode)[0], 
								this.criSelectedClass);
						domClass.add(query("span[data-cri-index='" + index +"']")[0], this.criSelectedClass);
					}
				},
				
				_criBtnonclick : function(evt) {
					var target = evt.target;
					while (target) {
						if (domClass.contains(target, "mui_zone_cri_btn")) {
							var opener = this.openerContainer;
							if (!opener)
								return;
							if (opener.resize) {
								this.hideOpener(this);
							}
							else {
								opener.show(target, [ 'below' ]);
							}
							this.handle = this.connect(document.body, touch.press,
									'unClick');
							break;
						}
						target = target.parentNode;
					}
				},

				unClick : function(evt) {
					var target = evt.target, isHide = true;
					while (target) {
						if (domClass.contains(target,"mui_zone_cri_btn") || target == this.openerContainer.domNode) {
							isHide = false;
							break;
						}
						target = target.parentNode;
					}
					
					if (isHide)
						this.hideOpener();
					this.disconnect(this.handle);
				},

				hideOpener : function(srcObj) {
					if(this.openerContainer)
						this.openerContainer.hide();
				},

				//判断是否应该返回到顶端
				_toTop : function() {
					var scorllView = viewRegistry.getParentView(this);
					var headHight = query(".mui_zone_perinfo",
							scorllView.domNode)[0].offsetHeight;
					// + this.refNavBar.domNode.offsetHeight
					var position = scorllView.getPos();
					var y = position.y;
					if (-y > headHight) {
						topic.publish("/mui/list/toTop", this, {
							y : -headHight,
							time : 0
						});
					}
				},

				onSwapViewChanged : function(view) {
					this.inherited(arguments);
					if (this.refNavBar) {
						var index = array.indexOf(this.getChildren(), view);
						this.refNavBar.getChildren()[index].setSelected();
					}
				},
				
				_wirteNum: function(data) {
					if(data && data.totalSize >= 0) {
						query(".knowledge_num").forEach(
								function(item, index, arr) {
									item.innerHTML = "(" + data.totalSize + ")";
								});
					}
				},
				
				
				onPushDomHide : function(store) {
					if (array.some(this.getChildren(), function(child) {return child == store;})) {
						topic.publish("/mui/list/pushDomHide", this);
					}
				}
			});
});
},
'sys/zone/mobile/js/list/item/PersonItemMixin':function(){
define(	["dojo/_base/declare", "dojo/dom-construct", "dojo/dom-class",
				"dojo/dom-style", "dojo/dom-attr", "dojox/mobile/_ItemBase",
				"dojox/mobile/iconUtils", "mui/util", "mui/list/item/_ListLinkItemMixin"],
		//横向布局
		function(declare, domConstruct, domClass, domStyle, domAttr, ItemBase,
				iconUtils, util, _ListLinkItemMixin) {
			var item = declare("sys.zone.mobile.js.list.item.PersonItemMixin", [ItemBase,
							_ListLinkItemMixin], {

						fdId : "",
						
						fdName : '',
						
						imgUrl : '/sys/person/sys_person_zone/sysPersonZone.do?size=m&method=img&fdId=',
						
						personUrl : '/sys/person/sys_person_zone/sysPersonZone.do?size=m&method=view&fdId=',
						
						buildRendering : function() {
							this.inherited(arguments);
							this._templated = !!this.templateString;
							if (!this._templated) {
								this.domNode = this.containerNode = this.srcNodeRef
										|| domConstruct.create("li");
								this.contentNode = domConstruct.create(
										'a', {
											className : 'mui_fans_zone_item muiSubject',
											'innerHTML' : '<img src="' + util.formatUrl(this.imgUrl + this.fdId)  +'"/>'
										}, this.domNode);
								
								domConstruct.create('div' , {
									className : "mui_fans_zone_item_name",
									'innerHTML' : util.formatUrl(this.fdName)
								}, this.contentNode);
								
								if (!this.href) {
									this.href = '/sys/person/sys_person_zone/sysPersonZone.do?size=m&method=view&fdId=' + this.fdId;
								}
								this.makeLinkNode(this.contentNode);
							}
						},


						startup : function() {
							if (this._started) {
								return;
							}
							this.inherited(arguments);
						},
						
						_setLabelAttr : function(text) {
							if (text)
								this._set("label", text);
						}
					});
			return item;
		});
},
'sys/zone/mobile/js/address/AddressZoneHeader':function(){
define( [ "dojo/_base/declare", "mui/address/AddressHeader",
          "dojo/dom-geometry", "dojo/dom-style"], 
			function(declare, AddressHeader, domGeometry,domStyle) {
		var header = declare("sys.zone.mobile.js.address.AddressZoneHeader", [AddressHeader], {
			buildRendering : function() {
				this.inherited(arguments);
				this.cancelNode.innerHTML = "";
			},
			
			startup: function() {
				this.inherited(arguments);
				var h = domGeometry.position(this.titleDom).h;
				domStyle.set(this.contentNode , "height" , h + "px");
			}
		});
		return header;
});
},
'sys/zone/mobile/js/list/PersonItemVerListMixin':function(){
define([
    "dojo/_base/declare",
	"mui/list/_TemplateItemListMixin",
	"sys/zone/mobile/js/list/item/PersonItemVerMixin"
	], function(declare, _TemplateItemListMixin, PersonItemVerMinxin) {
	
	//纵向
	return declare("sys.zone.mobile.js.list.PersonItemVerListMixin", [_TemplateItemListMixin], {
		
		itemTemplateString : null,

		itemRenderer : PersonItemVerMinxin //vertical
	});
});
},
'sys/zone/mobile/js/more/MoreButtonBar':function(){
define( [ "dojo/_base/declare", "dijit/_WidgetBase", "dojo/dom-class",
		"dojo/dom-construct", "dojo/dom-style", "dojo/topic", "dojo/query",
		"mui/panel/SlidePanel", "dojo/_base/lang", "dojo/_base/array"],
		function(declare, WidgetBase, domClass, domConstruct, domStyle, topic,
				query, SlidePanel, lang, array) {

			return declare("sys.zone.mobile.js.more.MoreButtonBar", [ WidgetBase ], {


				baseClass : "mui mui-more",
				
				refNavBar : null,
				
				items : [],
				
				buildRendering : function() {
					this.inherited(arguments);
					domConstruct.create("div", {
						className : 'mui_more_zone_button'
						}, this.domNode);
				},
				postCreate : function() {
					this.inherited(arguments);
					this.connect(this.domNode, "onclick", "_onClick");
					//组装选择项
					this
						.subscribe('/mui/nav/onComplete',
									'handleNavOnComplete');
					//点击选择项事件
					this.subscribe('/mui/panel/slide/click', "_onClickItem");
					
					this.subscribe('/mui/navitem/_selected',
										'handleNavOnSelected');
				},
				startup : function() {
					this.inherited(arguments);
					if (this.domNode.parentNode) {
						var h = this.domNode.parentNode.style.height;
						var styleVar =  {
								'height':h,
								'line-height' : h
							};
						domStyle.set(this.domNode,styleVar);
					}
				},

				_onClick : function(ctx) {
					var titles = this.items;
					var slide = new SlidePanel({
						store : titles,
						dir : "right",
						width : "130"
					});
					domConstruct.place(slide.domNode, document.body, 'last');
					slide.startup();
				},
				
				
				handleNavOnComplete : function(widget, items) {
					this.refNavBar = widget;
					array.forEach(items, function(item, index) {
						var addItem =  {
							text : item.text,
							id : item.id,
							selected : false,
							index :index
						};
						this.items.push(addItem);
					},this);
				},
				
				_onClickItem : function(obj, evt) {
					var nav = this.refNavBar;
					if(evt.index && nav) {
						var clickNavItem = nav.getChildren()[evt.index];
						clickNavItem.beingSelected(clickNavItem.textNode);
					}	                       
				},
				
				handleNavOnSelected : function(obj, evt) {
					if(obj.id) {
						array.forEach(this.items, function(item, index) {
							if(item.id == obj.id) {
								item.selected = true;
							} else {
								item.selected = false;
							}
						},this);
					}
				}
				
			});
		});

},
'sys/zone/mobile/js/list/item/ZoneTextItemMixin':function(){
define(	["dojo/_base/declare", "dojo/dom-construct", 
				"dojo/dom-style", "dojo/dom-attr", 
					"mui/util", "mui/list/item/TextItemMixin"],
		function(declare, domConstruct, domStyle, domAttr,
				 util,TextItemMixin) {
			var item = declare("sys.zone.ZoneTextItemMixin", [TextItemMixin], {

						buildInternalRender : function() {

							this.titleNode = domConstruct.create('a', null,
									this.contentNode);
							
							if (this.label) {
								this.labelNode = domConstruct.create('span', {
											'innerHTML' : this.label,
											'className' : 'muiSubject'
										}, this.titleNode);
							}

							if (this.href) {
								this.makeLinkNode(this.titleNode);
							}

							this.otherNode = domConstruct.create('p', {
										className : 'muiListInfo'
									}, this.contentNode);

							if (this.creator) {
								this.creatorNode = domConstruct.create('div',
										{
											'innerHTML' : this.creator,
											'className' : 'muiAuthor muiTextCreator'
										}, this.otherNode);
							}

							if (this.created) {
								this.createdNode = domConstruct.create('div',
										{
											'innerHTML' : '<i class="mui mui-todo_date"></i>' + this.created,
											'className' : 'muiTextCreated'
										}, this.otherNode);
							}

						}
					});
			return item;
		});
},
'sys/zone/mobile/js/list/PersonScrollableView':function(){
define([
    "dojo/_base/declare",
    "dojo/topic",
	"mui/list/StoreScrollableView"
	], function(declare,topic, StoreScrollableView) {
	
	return declare("sys.zone.mobile.js.list.PersonScrollableView", [StoreScrollableView], {
		
		//scrollBar : false

	});
});
},
'sys/zone/mobile/js/_FollowButtonMixin':function(){
define(	["dojo/_base/declare", "dojo/_base/lang", "dojo/request", "mui/util",
				"dojo/dom-class", "mui/dialog/Tip", 
				'dojo/dom-attr', "dojo/dom-construct"
				,'dojo/topic'], function(declare, lang,
				req, util, domClass, Tip, domAttr, domConstruct, topic) {

			return declare("sys.zone.mobile.js._FollowButtonMixin", null, {
				
				followStatusUrl:"/sys/fans/sys_fans_main/sysFansMain.do?method=loadRlation",
				
				addCareUrl : "/sys/fans/sys_fans_main/sysFansMain.do?method=addFollow",
				
				baseClass : "mui_zone_follow_btn_base",
				
				/*******关注需要的字段****/
				userId : "",
				
				attentModelName : "",
				
				fansModelName : "",
				
				isFollowPerson : "",
				/*******关注需要的字段****/
				
				//取消关注class
				followedClass: "mui_zone_followed_btn",
				
				//互相关注class
				followEachClass: "mui_zone_followeach_btn",
				
				//关注class
				followClass: "mui_zone_follow_btn",
				
				locked : false,
				
				followLabel : "<span class='mui_zone_tips'>关注</span>",
				
				followedLabel : '<span class="mui_zone_tips">已关注<em>|</em>取消</span>',
				
				followeachLabel : '<span class="mui_zone_tips">互相关注<em>|</em>取消</span>',
				
				followIcon : "mui-plus",
				
				followedIcon : "mui-right",
				
				followeachIcon : "mui-addTwo",
				
				buildRendering : function() {
					this.inherited(arguments);
					this.icon = domConstruct.create("span" , {
						className:"mui_zone_follow_base"
					}, this.domNode);
					this.iconinner = domConstruct.create('i' , {
						className : "mui mui_zone_follow_icon"
					}, this.icon);
					domClass.add(this.domNode , this.baseClass);
				},
				
				startup : function() {
					if (this._started)
						return;
					this.inherited(arguments);
					req(util.formatUrl(this.followStatusUrl), {
						handleAs : "json",
						method : 'post',
						data : {
							"userId" : this.userId,
							"attentModelName" : this.attentModelName,
							"fansModelName" : this.fansModelName,
							"isFollowPerson" : this.isFollowPerson
						}
					}).then(lang.hitch(this, function(data) {
						this._toggleLabel(data);
					}));
				},
				
				
				followAction : function() {
					this.set('locked', true);
					
					var type = domAttr.get(this.domNode, "data-action-type");
					req(util.formatUrl(this.addCareUrl), {
						handleAs : "json",
						method : 'post',
						data : {
							"fdPersonId" : this.userId,
							"attentModelName" : this.attentModelName,
							"fansModelName" : this.fansModelName,
							"isFollowPerson" : this.isFollowPerson,
							"isFollowed" : type
						}
					}).then(lang.hitch(this, function(data) {
						if(data.result == "success") {
							this._toggleLabel(data, true);
						} else {
							Tip.fail({"text" : "操作失败"});
						}
					}), function(error) {
						Tip.fail({"text" : "操作失败"});
					});
				},
				
				
				onClick: function() {
					if(this.locked)
						return;
					if(this.contactInfo) {
						topic.publish("/sys/zone/list/contact", this, {
									contactInfo : this.contactInfo,
									currentIcon : this.currentIcon ,
									currentText : this.cuurentText,
									followAction : this.followAction
							});
					} else {
						this.followAction();
					}
				},
				
				_toggleLabel : function(data, isTip) {
					var tipText = "", icon ="";
						
					if(data.relation == "2" ||data.relation == "0" ) {
						this.label = this.followLabel;
						domAttr.set(this.domNode, "data-action-type", "unfollowed");
						domClass.remove(this.domNode , this.followedClass);
						
						if(this.iconinner) {
							domClass.remove(this.iconinner, this.followedIcon + " " + this.followeachIcon);
							domClass.add(this.iconinner ,  this.followIcon);
						}
						domClass.remove(this.domNode , this.followedClass);
						domClass.add(this.domNode , this.followClass );
						//当前的icon
						this.currentIcon = this.followIcon;
						this.cuurentText = "关注";
						tipText = '取消关注成功！';
					}else if(data.relation=="3" || data.relation == "1") {
						
						var fIcon = "";
						if(data.relation=="3")  {
							this.label = this.followeachLabel;
							fIcon = this.followeachIcon;
						} else {
							this.label = this.followedLabel;
							fIcon = this.followedIcon;
						}
						if(this.iconinner) {
							domClass.remove(this.iconinner, this.followIcon);
							domClass.add(this.iconinner , fIcon);
						}
						domAttr.set(this.domNode, "data-action-type", "followed");
						domClass.remove(this.domNode , this.followClass);
						domClass.add(this.domNode , this.followedClass);
						//当前的icon
						this.currentIcon = fIcon;
						this.cuurentText = "取消关注";
						tipText = "关注成功！";
					}
					
					if(isTip)
						Tip.tip({
							icon : 'mui mui-success',
							text : tipText
						});
					
					var labelNode = this.containerNode || this.focusNode;
					
					labelNode.innerHTML = this.icon.outerHTML + this.label;
					
					this.set("locked", false);
				}

			});
			
			
});
			
},
'sys/zone/mobile/js/address/AddressZoneItemMixin':function(){
define(
		[ "dojo/_base/declare", "dojo/dom-class", "mui/iconUtils",
				"dojo/_base/lang", "dojox/mobile/Button",
				"sys/zone/mobile/js/_FollowButtonMixin",
				"mui/category/CategoryItemMixin", "mui/util",
				"dojo/dom-construct", "dojo/dom-attr" ,"dojo/topic",'dojox/mobile/viewRegistry'],
		function(declare, domClass, iconUtils, lang, button,
				_FollowButtonMixin, CategoryItemMixin, util, domConstruct, domAttr, topic,viewRegistry) {
			var item = declare(
					"sys.zone.mobile.js.address.AddressZoneItemMixin",
					[ CategoryItemMixin ],{
				
				extendContact : [],
				
				
				personUrl : "/sys/zone/index.do?userid=!{personId}",
				
				postCreate:function() {
					this.inherited(arguments);
				},
				
				//获取分组标题信息
				getTitle:function(){
					if( this.label=='2' ){
						return "组织";
					}
					if(this.label=='4'){
						return "岗位";
					}
					return this.label;
				},
				
				//是否显示往下一级
				showMore : function(){
					if((this.type | window.ORG_TYPE_ORGORDEPT) ==  window.ORG_TYPE_ORGORDEPT){
						return true;
					}
					return false;
				},
				
				//是否显示选择框
				showSelect:function(){
					var pWeiget = this.getParent();
					if(pWeiget && ((pWeiget.selType & this.type) ==  this.type)){
						return true;
					}
					return false;
				},
				
				//是否选中
				isSelected:function(){
					var pWeiget = this.getParent();
					if(pWeiget && pWeiget.curIds && (pWeiget.curIds.indexOf(this.fdId)>-1)){
						return true;
					}
					return false;
				},
				
				buildIcon:function(iconNode){
					
					if(this.icon){
						iconUtils.setIcon(util.formatUrl(this.icon), null,
								this._headerIcon, null, iconNode);
					}else{
						if((this.type | window.ORG_TYPE_ORGORDEPT) ==  window.ORG_TYPE_ORGORDEPT){
							this.icon = "mui mui-group muiAddressDept"; 
						}
						if((this.type | window.ORG_TYPE_POST) ==  window.ORG_TYPE_POST){
							this.icon = "mui mui-post muiAddressPost"; 
						}
						iconUtils.setIcon(this.icon, null,
								this._headerIcon, null, iconNode);
					}
				},
				
				startup : function() {
					this.inherited(arguments);
					//构建关注按钮
					if(this.moreArea && this._isPerson() && !this._isSelf()) {
						var followBtn = new declare( [button,
								_FollowButtonMixin])( {
									"userId" : this.fdId,
									"attentModelName" : "com.landray.kmss.sys.zone.model.SysZonePersonInfo",
									"fansModelName" : "com.landray.kmss.sys.zone.model.SysZonePersonInfo",
									"isFollowPerson" : "true",
									"srcNodeRef" : domConstruct.create("span"),
									"followedLabel" : "",
									"followeachLabel" : "",
									"followLabel" : "",
									"followIcon" : "mui-add_person",
									"followedIcon" : "mui-right_person",
									"followeachIcon" : "mui-each_person",
									"contactInfo" :  {
										email : this.email,
										tel : this.phone,
										personId : this.fdId
									}
								});
						this.moreArea.appendChild(followBtn.domNode);
						followBtn.startup();
					}
				},
				
				_isPerson :function() {
					return this.type && 
						(this.type | window.ORG_TYPE_PERSON) ==  window.ORG_TYPE_PERSON;
				},
				
				_isSelf : function() {
					return this.fdId && (this.fdId == window.currrtPersonId);
				},
				
				buildRendering : function() {
					this.inherited(arguments);
					if(this._isPerson() && this.domNode) {
						//显示更多信息
						domClass.add(this.domNode, "mui_zone_person_cateInfo");
					}
				},
				_buildItemBase : function() {
					this.cateContainer = domConstruct.create("div",
								{className:"muiCateContainer"},this.contentNode);
					
					if(this.header != 'true' ) {
						this.iconNode = domConstruct.create('div', {
										'className' : 'muiCateIcon mui_zone_cate_icon'
									}, this.cateContainer);
						this.buildIcon(this.iconNode);
						this.infoNode = domConstruct.create('div', {
										'className' : 'muiCateInfo'
									}, this.cateContainer);
						this.titleNode = domConstruct.create('div', {
										'className' : 'muiCateName' + (this._isPerson() ? 
												" mui_zone_cate_person_name" : ""),
										'innerHTML' : this.label 
									}, this.infoNode);
						if(this.post) {
							var post = domConstruct.create('div', {
								'className' : 'muiCateName mui_zone_cate_post',
								'innerHTML' : this.post 
							}, this.infoNode);
							domConstruct.create("span",{
								"className" : "mui mui-post"
							},post, "first");
						}
						if(this.phone) {
							var phone = domConstruct.create('div', {
								'className' : 'muiCateName mui_zone_cate_phone',
								'innerHTML' : this.phone 
							}, this.infoNode);
							domConstruct.create("span",{
								"className" : "mui mui-tel"
							},phone, "first");
						}
						if(this._isPerson()) {
							var href = util.urlResolver(this.personUrl, {"personId": this.fdId});
							this.href = util.formatUrl(href);
						}
						this.connect(this.iconNode,"click","_selectCate");
						this.connect(this.infoNode,"click","_selectCate");
					} else {//头部 显示ABCD...
						this.titleNode = domConstruct.create('div', {
							'className' : 'muiCateName muiCateTitle',
							'innerHTML' : this.getTitle()
						}, this.cateContainer);
					}
					this.moreArea = domConstruct.create("div",{className:"muiCateMore"},this.cateContainer);
				},
				_selectCate : function(evt) {
					
					this.inherited(arguments);
					this.set("entered", true);
					this.defer(function(){
						this.set("entered", false);
					},200);
					var self = this;
					if(this.href) {
						this.defer(function(){
							window.open(self.href, "_self");
						}, 250);
					}
				}
				
				
			});
			return item;
		});
},
'sys/zone/mobile/js/list/item/PersonItemVerMixin':function(){
define(
		[ "dojo/_base/declare", "dojo/dom-construct", "dojo/dom-class",
				"dojo/dom-style", "dojo/dom-attr", "dojox/mobile/_ItemBase",
				"dojox/mobile/iconUtils", "mui/util",
				"mui/list/item/_ListLinkItemMixin" ],
		//纵向布局
		function(declare, domConstruct, domClass, domStyle, domAttr, ItemBase,
				iconUtils, util, _ListLinkItemMixin) {
			var item = declare(
					"sys.zone.mobile.js.list.item.PersonItemVerMixin",
					[ ItemBase, _ListLinkItemMixin ],
					{

						fdId : "",

						fdName : '',

						imgUrl : '/sys/person/sys_person_zone/sysPersonZone.do?size=m&method=img&fdId=',

						personUrl : '/sys/person/sys_person_zone/sysPersonZone.do?size=m&method=view&fdId=',

						tag : "li",

						baseClass : "muiListItem",

						buildRendering : function() {
							this.inherited(arguments);

							this.domNode = this.containerNode = this.srcNodeRef
									|| domConstruct.create(this.tag, {
										className : this.baseClass
									});

							// 左侧头像
							var leftBar = domConstruct.create("div", {
								className : "sys_zone_person_icon"
							}, this.containerNode);
							domConstruct.create("img", {
								className : "sys_zone_person_icon_img",
								src : util.formatUrl(this.imgUrl + this.fdId)
							}, leftBar);

							// 右侧内容
							var rightContent = domConstruct.create("div", {
								className : "sys_zone_person_info"
							}, this.containerNode);
							domConstruct.create("div", {
								className : "sys_zone_person_name",
								innerHTML : this.fdName
							}, rightContent);
							
							if (!this.href) {
								this.href = '/sys/person/sys_person_zone/sysPersonZone.do?size=m&method=view&fdId=' + this.fdId;
							}
							this.makeLinkNode(this.domNode);
							
						},

						startup : function() {
							if (this._started) {
								return;
							}
							this.inherited(arguments);
						},

						_setLabelAttr : function(text) {
							if (text)
								this._set("label", text);
						}
					});
			return item;
		});
},
'sys/zone/mobile/js/view/PersonMoreView':function(){
define([
    "dojo/_base/declare",
    "dojo/topic",
	"dojox/mobile/View","dojox/mobile/TransitionEvent"
	], function(declare,topic, View, TransitionEvent, registry) {
	//点击粉丝或关注的更多按钮之后滑动过来的view
	return declare("sys.zone.mobile.js.view.PersonMoreView", [View], {
		
		scrollBar : false,
		
		hasData: false,
		
		postCreate : function() {
			this.inherited(arguments);
			this.subscribe('/sys/zone/onSlide',
					'handleViewSilde');
		},

		handleViewSilde : function(obj, evt) {
			if(evt.moreViewId) {
				if(evt.moreViewId == this.id) {
					var opts = {
							transition : 'slide',
							moveTo: this.id
						};
					new TransitionEvent(evt.target, opts).dispatch();
					this.onReload();
				}
			}
		},
		
		onReload: function(widget, handle) {
			if(!this.hasData) {
				//加载数据
				this.getChildren()[1].reload();
				this.hasData = true;
			}
		}
		
	});
});
},
'sys/zone/mobile/js/list/JsonStoreDataList':function(){
define([
    "dojo/_base/declare",
	"mui/list/JsonStoreList",'dojo/topic',"dojo/query",
	"mui/util","dojo/dom-style","dojo/dom-construct","dojo/dom-attr", 
	"dojox/mobile/TransitionEvent","dijit/registry","dojo/dom-geometry"
	], function(declare, JsonStoreList, topic, query,
				util, domStyle, domConstruct,
				domAttr,TransitionEvent,registry, domGeometry) {
	
	return declare("sys.zone.mobile.list.js.JsonStoreDataList", [JsonStoreList], {
			
			startup : function() {
				this.set ("lazy", false);
				this.subscribe('/mui/list/loaded', 'handleOnLoaded');
				this._getDef();
				this._calWidth();
				this.inherited(arguments);
			},
			
			//参考元素
			_getDef: function() {
				if(!this.def) {
					var def= query(".mui_fans_zone_defined", this.domNode)[0];
					if(!def) {
						def = domConstruct.create('li' , {
							className : "mui_fans_zone_defined"
						}, this.domNode, "first");
					}
					this.def = def;
					var moreButton = domConstruct.create('a', {
						className: "mui_fans_zone_item",
						"href" : "javascript:void(0);",
						'innerHTML' : '<div class="mui mui-more3 mui_fans_zone_more"></div>'
					},this.def);
					this.connect(moreButton, "click",  this._morePersonClick);
				}
				return this.def;
			},
			
			//更多按钮点击事件
			_morePersonClick : function(e) {
				
				if(!this.moreViewId)
					return;
				//发滑动事件
				topic.publish("/sys/zone/onSlide", this, {
					moreViewId : this.moreViewId,
					target : e.target
				});
			},
			
			_calWidth : function() {
				if(this.totalNum <= 0) {
					return;
				}
				var rowsize = 0;
				//var containterWidth = this.domNode.offsetWidth;
				//var itemWidth = this.def.offsetWidth;
				var containterWidth = domGeometry.getMarginSize(this.domNode).w;
				var itemWidth = domGeometry.getMarginSize(this.def).w;
				//可放下的个数
				var allNum = parseInt(containterWidth / itemWidth);
				if(allNum >= this.totalNum) {
					rowsize = allNum;
					domStyle.set(this.def, "display", "none");
				} else {
					rowsize = allNum - 1;
				}
				this.url =  this.url + "&rowsize=" + rowsize;
			},
	
			handleOnPush: function(widget, handle) {
				return;
			},
			
			handleOnLoaded : function(obj, data) {
				domConstruct.place(this.def, this.domNode, "last");
				//全局事件，隐藏加载更多
				if(obj === this) {
					topic.publish("/mui/list/pushDomHide");
				}
			},
			
			//覆盖无数据
			buildNoDataItem : function(widget) {
				if(widget.totalSize == 0 )
					this.hiedDef();
			},
			
			hiedDef: function(){
				if(this.def)
					domStyle.set(this.def, "display", "none");
			}

	});
});
},
'sys/zone/mobile/js/_AddressZoneListContactMixin':function(){
define(	["dojo/_base/declare", "dojo/_base/lang", "dojo/request", "mui/util",
				"dojo/dom-class", "mui/dialog/Tip", 'dojo/dom-attr', 
				"dojo/dom-style",
				"sys/zone/mobile/js/_FollowButtonMixin",
				"dojo/dom-construct",
				"dojo/dom-geometry"], function(declare, lang,
				req, util, domClass, Tip, domAttr,domStyle, 
				_FollowButtonMixin,domConstruct,domGeometry) {

			return declare("sys.zone._FollowListButtonMixin", null, {
				
				postCreate : function() {
					this.inherited(arguments);
					this.subscribe("/sys/zone/list/contact", "_handleOnContact");
				},
				
				personUrl : "/sys/zone/index.do?userid=!{personId}",
				
				//#E7507B  #F26C60 #FDA106 #34B87F #66CDCC
				// 显示遮罩
				showMask : function() {
					if (this.lock == true)
						return;
					this.set('lock', true);
					this.defer(function() {
						this.buildMask();
					}, 350);
				},

				// 隐藏遮罩
				hideMask : function(fire) {
					this.defer(function() {
						this._hideMask();
						this.set('lock', false);
					}, 350);
				},

				
				_showMask : function() {
					domStyle.set(this._container, {
						'display' : 'block',
						'opacity' : 1
					});
					if(!this.handleHide){
						this.handleHide = this.connect(this._container, "onclick", 'hideClick');
					}
					this.defer( function() {
						for ( var i = 0; i < this.iconObjs.length; i++) {
							domStyle.set(this.iconObjs[i], {
								'-webkit-transform' : 'translate3d(0px, 0px, 0px)',
								'opacity' : 1
							});
						}
					},200);
					
				},
				
				hideClick : function() {
					this._hideMask();
				},
				
				_hideMask : function() {
					this.contactInfo = null;
					this.followAction = null;
					this.followObject = null;
					for (var i = 0; i < this.iconObjs.length; i++) {
						domStyle.set(this.iconObjs[i],{
								'-webkit-transform' : 'translate3d(0px, 500px, 0px)',
								'opacity' : 0
							});
					}
					
					this.defer(function() {
						domStyle.set(this._container, {
							'opacity' : 0
						});
					}, 500);
					this.defer(function() {
						domStyle.set(this._container, {
							'display' : 'none'
						});
					}, 700);
				},
				
				buildMask : function(initAttIcon, initText) {
					if (this._container) {
						this._showMask();
						return;
					}
					
					this._container = domConstruct.create('div', {
						'className' : 'muiZoneContactMask'
					}, document.body, 'last');
					this._containerUl = domConstruct.create('div', {
						'className' : 'muiZoneContactUl'
					},  this._container);
					//var containerHeight = domGeometry.position(this.titleDom).h;
					var contacts = this._getContacts();
					if(!this.iconObjs) {
						this.iconObjs = [];
					}
					for(var i = 0; i < contacts.length; i ++) {
						var colorClass = "muiZoneDetailItemBgColor" + (i % 6);
						var item = domConstruct.create("div", {
							'className' : 'muiZoneContact'
						}, this._containerUl);
						var citem  = domConstruct.create("span", {
							'className' : 'muiZoneDetailItem' + " " + colorClass,
							'data-index' : i
						}, item);
						var attText  = domConstruct.create("span", {
							'className' : 'muiZoneDetailItemText',
							'innerHTML' : contacts[i].text ? contacts[i].text : ""
						},item);
						var itemIcon = domConstruct.create("i", {
							'className' : 'mui ' +  contacts[i].icon
						}, citem);
						if("attBtn" == contacts[i].id) {
							this.attIcon = itemIcon;
							this.attText = attText;
							if(initAttIcon)
								domClass.add(this.attIcon, initAttIcon);
							if(initText)
								this.attText.innerHTML = initText;
						}
						this.connect(item, "onclick", 'onContactClick');
						this.iconObjs.push(item);
					}
					this._showMask();
				},
				
				//变更关注按钮的样式和方法
				changeAttIcon : function(clsName, text) {
					if(this.attIcon ) {
						domClass.remove(this.attIcon);
						if(this.attText) {
							this.attText.innerHTML = text;
						}
						domClass.add(this.attIcon, "mui" + " " +  clsName);
					}
				},
				
				_handleOnContact : function(obj, evt) {
					if(evt) {
						this.contactInfo = evt.contactInfo;
						this.followAction = evt.followAction;
						this.followObject = obj;
						this.changeAttIcon(evt.currentIcon, evt.currentText);
					}
					this.buildMask(evt.currentIcon, evt.currentText);
				},
				
				_getContacts : function() {
					if(!this.contacts) {
						
						this.contacts = [ 
						        {	
						        	"id" : "attBtn",
						        	"order" : -3,
						        	"icon" : ""
						        },
						        {
									"id" : "mui-tel",
									"icon" : "mui-tel",
									"href" : "tel:!{tel}",
									"order" : -2,
									"replace" : "tel",
									"text" : "电话"
								}, {
									"id" : "mui-mail",
									"icon" : "mui-mail",
									"href" : "mailto:!{email}",
									"order" : -1,
									"replace" : "email",
									"text" : "邮件"
								},
								{
									"id" : "mui-msg",
									"icon" : "mui-msg",
									"href" : "sms:!{tel}",
									"order" : 9,
									"replace" : "tel",
									"text" : "短信"
								}, {
									"id" : "mui-infomation",
									"icon" : "mui-infomation",
									"href" : util.formatUrl(this.personUrl),
									"order" : 10,
									"replace" : "personId",
									"text" : "个人信息"
								} ];
						this.contacts = this.contacts.concat(window.extendContact);
						this.contacts.sort(function(a, b){
							return a.order - b.order ;
						});
					}
					return this.contacts;
				},
				
				onContactClick : function(evt){
					if(evt){
						if (evt.stopPropagation)
							evt.stopPropagation();
						if (evt.cancelBubble)
							evt.cancelBubble = true;
						if (evt.preventDefault)
							evt.preventDefault();
						if (evt.returnValue)
							evt.returnValue = false;
					}
					
					var target = evt.target;
					while (target && !domClass.contains(target, "muiZoneContact")) { 
						var index = domAttr.get(target, "data-index");
						if (index !== null && index != "undefined"  && index>= 0) {
							this.handleIndex(index, evt);
							break;
						}
						target = target.parentNode;
					}
					
				},
				
				handleIndex :function (index, evt) {
					var conIndex = this._getContacts()[index];
					if(conIndex) {
						if(conIndex.id== "attBtn") {
							this.followAction.apply(this.followObject);
							this._hideMask();
						}
						if(conIndex.href && this.contactInfo) {
							if(!this.contactInfo[conIndex.replace])
								return;
							var href = util.urlResolver(conIndex.href, this.contactInfo);
							window.open(href, "_self");
						}
					}
				}
			});
});
},
'sys/zone/mobile/js/list/PersonItemListMixin':function(){
define([
    "dojo/_base/declare",
	"mui/list/_TemplateItemListMixin",
	"sys/zone/mobile/js/list/item/PersonItemMixin"
	], function(declare, _TemplateItemListMixin, PersonItemMixin) {
	
	//横向排列
	return declare("sys.zone.mobile.js.list.PersonItemListMixin", [_TemplateItemListMixin], {
		
		itemTemplateString : null,

		itemRenderer : PersonItemMixin 
	});
});
},
'sys/zone/mobile/js/BaseInfoView':function(){
define( [ 'dojo/_base/declare', 'dojo/_base/lang', 'dojo/topic',
		'dojo/_base/array', "dojo/query", 'dojox/mobile/View', 'dojo/request',
		"mui/util", 'dojox/mobile/viewRegistry', 'dojo/dom-construct',
		"dojo/dom-style", "dojo/dom-class", 'dojo/dom-attr'], 
		function(declare, lang, topic, array,
		query, View, request, util, viewRegistry, domConstruct, domStyle,
		domClass, domAttr) {

	return declare('sys.zone.mobile.js.BaseInfoView', [ View ],
			{
				refNavBar : null,

				userId : "",
				
				postCreate : function() {
					this.subscribe("/mui/list/onPush", "handleOnPush");
				},
				
				buildRendering : function() {
					this.inherited(arguments);
					domClass.add(this.domNode, "mui_zone_baseinfo");
					domStyle.set(this.domNode, "display" , "none");
				},
				
				
				handleOnPush : function(obj,handle) {
					if(handle.done)
						handle.done(this);
				}
			});
});
},
'sys/zone/mobile/js/list/TextItemListMixin':function(){
define([
    "dojo/_base/declare",
	"mui/list/_TemplateItemListMixin",
	"sys/zone/mobile/js/list/item/ZoneTextItemMixin"
	], function(declare, _TemplateItemListMixin, ZoneTextItemMixin) {
	
	
	return declare("mui.list.TextItemListMixin", [_TemplateItemListMixin], {
		
		itemTemplateString : null,

		itemRenderer : ZoneTextItemMixin
	});
});
},
'sys/zone/mobile/js/_JsonStoreListZoneMixin':function(){

define([
	'dojo/_base/declare', 
	'mui/list/_JsonStoreListMixin'
	], function(declare,_JsonStoreListMixin) {
	
	return declare("sys.zone.mobile.js._JsonStoreListZoneMixin", [_JsonStoreListMixin], {
		//是否加载list，当list隐藏时不加载
		isLoadMore : false,
		
		handleOnPush: function(widget, handle) {
			if(!this.isLoadMore)
				return;
			this.inherited(arguments);
		}
	});
});
},
'sys/zone/mobile/js/JsonStoreZoneList':function(){
define([
    "dojo/_base/declare",
    "dojox/mobile/EdgeToEdgeStoreList",
	"./_JsonStoreListZoneMixin"
	], function(declare,EdgeToEdgeStoreList,_JsonStoreListZoneMixin) {
	
	return declare("sys.zone.mobile.js.JsonStoreZoneList", 
			[EdgeToEdgeStoreList, _JsonStoreListZoneMixin], {
		
	});
});
}
}});