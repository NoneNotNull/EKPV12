require({cache:{
'km/calendar/mobile/resource/js/list/GroupItemListMixin':function(){
define([
    "dojo/_base/declare",
	"mui/list/_TemplateItemListMixin",
	"km/calendar/mobile/resource/js/list/item/GroupItemMixin"
	], function(declare, _TemplateItemListMixin, ItemMixin) {
	
	return declare("km.calendar.mobile.resource.js.GroupItemListMixin", [_TemplateItemListMixin], {
		
		itemTemplateString : null,
		
		itemRenderer: ItemMixin,
		
		currentDate:new Date(),
		
		buildRendering:function(){
			this.inherited(arguments);
			this.subscribe('/mui/calendar/valueChange','saveCurrentDate');
		},
	
		//选中日期改变时,缓存选中日期
		saveCurrentDate:function(widget,args){
			this.currentDate=args.currentDate;
		}
		
	});
});
},
'km/calendar/mobile/resource/js/list/CalendarItemListMixin':function(){
define([
    "dojo/_base/declare",
	"mui/list/_TemplateItemListMixin",
	"km/calendar/mobile/resource/js/list/item/CalendarItemMixin"
	], function(declare, _TemplateItemListMixin, ItemMixin) {
	
	return declare("km.calendar.mobile.resource.js.CalendarItemListMixin", [_TemplateItemListMixin], {
		
		itemTemplateString : null,
		
		itemRenderer: ItemMixin,
		
		currentDate:new Date(),
		
		buildRendering:function(){
			this.inherited(arguments);
			this.subscribe('/mui/calendar/valueChange','saveCurrentDate');
		},
	
		//选中日期改变时,缓存选中日期
		saveCurrentDate:function(widget,args){
			this.currentDate=args.currentDate;
		}
		
	});
});
},
'km/calendar/mobile/resource/js/NavBarMixin':function(){
define(['dojo/_base/declare','dojo/dom-style','dojo/dom-construct'],
		function(declare,domStyle,domConstruct){
	
	return declare('km.calendar.mobile.resource.js.NavBarMixin',null,{
		
		buildRendering:function(){
			this.inherited(arguments);
			
			//自定义选中节点(覆盖原来的样式)
			domConstruct.destroy(this.selectedNode);
			this.selectedNode=domConstruct.create('div', {
				className : 'muiCalendarNavBarSelected'
			}, this.domNode);
			domConstruct.create('i', {
				className : 'arr arrM'
			}, this.selectedNode);
			domConstruct.create('i', {
				className : 'arr arrC'
			}, this.selectedNode);
		}
		
		
	});
	
	
	
});
},
'km/calendar/mobile/resource/js/list/item/GroupItemMixin':function(){
define([
    "dojo/_base/declare",
    "dojo/dom-construct",
    "dojo/dom-class",
	"dojo/dom-style",
	"dojo/dom-attr",
    "dojox/mobile/_ItemBase",
   	"mui/util",
   	"mui/calendar/CalendarUtil",
   	"mui/list/item/_ListLinkItemMixin",
   	"dojo/date",
	"dojo/date/locale" ,
	"mui/i18n/i18n!sys-mobile"
	], function(declare, domConstruct,domClass , domStyle , domAttr , ItemBase , util, cutil,_ListLinkItemMixin,dateUtil,locale,msg) {
	
	var item = declare("km.imeeting.list.item.CalendarItemMixin", [ItemBase, _ListLinkItemMixin], {
		tag:"li",
		
		baseClass:"muiGroupListItem",
		
		href : 'javascript:void(0);',
		
		buildRendering:function(){
			
			this.inherited(arguments);
			
			this.domNode = this.containerNode= this.srcNodeRef
				|| domConstruct.create(this.tag,{className:this.baseClass});
			
			//左侧头像
			var leftBar=domConstruct.create("div",{className:"leftBar"},this.containerNode);
			domConstruct.create("img", { className: "muiProcessImg",src:this.img}, leftBar);
			
			//右侧内容
			var rightContainer=domConstruct.create("div", { className: "rightContainer"}, this.containerNode),
				contentContainer=domConstruct.create("div", { className: "contentContainer"}, rightContainer);
			
			//标题
			if(this.title){
				this.labelNode = domConstruct.create("h4",{className:"muiSubject",innerHTML:this.title},contentContainer);
			}
			
			var groupList=domConstruct.create("ul", { className: "groupList"}, contentContainer);
			var li;
			//所有者
			if(this.owner){
				li=domConstruct.create("li", {className:'muiGroupPersons' }, groupList);
				domConstruct.create("i", { className: "mui mui-person"}, li);
				domConstruct.create("span", { innerHTML: this.owner }, li);
			}
			//时间
			var format=msg['mui.date.format.datetime'];//'yyyy-MM-dd HH:mm'
			if(this.allDay){
				format=msg['mui.date.format.date'];//'yyyy-MM-dd'
			}
			var _start=locale.parse(this.start,{selector : 'time',timePattern : format}),
				_end=locale.parse(this.end,{selector : 'time',timePattern : format}),
				_date='';
				
			if(dateUtil.compare(_start,_end,'date') != 0 ){//跨天,显示MM-dd HH:mm ~ {MM-dd HH:mm}
				var tp=this.allDay?'':msg['mui.date.format.time'];
				tp='MM-dd '+tp;
				_start=locale.format(_start,{selector : 'time',timePattern : tp });
				_end=locale.format(_end,{selector : 'time',timePattern : tp });
				_date=_start+' ~ '+_end;
			}else{//非跨天,显示HH:mm ~ {HH:mm}
				_start=locale.format(_start,{selector : 'time',timePattern : msg['mui.date.format.time'] });
				_end=locale.format(_end,{selector : 'time',timePattern : msg['mui.date.format.time'] });
				_date=_start+' ~ '+_end;
				if(this.allDay){
					_date='全天';
				}
			}
			li=domConstruct.create("li", {className:'muiGroupTime' }, groupList);
			domConstruct.create("i", { className: "mui mui-meeting_date"}, li);
			domConstruct.create("span", { innerHTML:_date }, li);
			
			
		},
		
		startup:function(){
			if(this._started){ return; }
			this.inherited(arguments);
		},
	
		_setLabelAttr: function(text){
			if(text)
				this._set("label", text);
		},
		
		//url加入当前选中日期参数
		makeUrl:function(){
			var url=this.inherited(arguments),
				parent=this.getParent();
			if(parent){
				var _cd=cutil.formatDate(parent.currentDate);
				url=util.setUrlParameter(url,'currentDate',_cd);
			}
			return url;
		}
		
	});
	return item;
});
},
'km/calendar/mobile/resource/js/SwitchMixin':function(){
define(['dojo/_base/declare','dojo/topic','dojo/dom-construct'],
		function(declare,topic,domConstruct){
	
	return declare('km.calendar.mobile.resource.js.SwitchMixin',null,{
		
		property:'',
		
		buildRendering:function(){
			this.inherited(arguments);
			this.propDom=domConstruct.create('input',{type:'hidden',name:this.property,value:this.value=='on'?true:false},this.domNode);
		},
		//添加事件,供外部监听
		onStateChanged:function(/*String*/newState){
			this.inherited(arguments);
			var _value=newState=='on'?true:false;
			this.propDom.value=_value;
			topic.publish('km/calendar/statChanged',this,_value);
		}
		
		
	});
	
	
	
});
},
'km/calendar/mobile/resource/js/list/item/CalendarItemMixin':function(){
define([
    "dojo/_base/declare",
    "dojo/dom-construct",
    "dojo/dom-class",
	"dojo/dom-style",
	"dojo/dom-attr",
    "dojox/mobile/_ItemBase",
   	"mui/util",
   	"mui/calendar/CalendarUtil",
   	"mui/list/item/_ListLinkItemMixin",
   	"dojo/date",
	"dojo/date/locale" ,
	"mui/i18n/i18n!sys-mobile"
	], function(declare, domConstruct,domClass , domStyle , domAttr , ItemBase , util, cutil,_ListLinkItemMixin,dateUtil,locale,msg) {
	
	var item = declare("km.imeeting.list.item.CalendarItemMixin", [ItemBase, _ListLinkItemMixin], {
		tag:"li",
		
		baseClass:"muiCalendarListItem",
		
		href : '',
		
		buildRendering:function(){
			
			this.inherited(arguments);
			
			this.domNode = this.containerNode= this.srcNodeRef
				|| domConstruct.create(this.tag,{className:this.baseClass});
			
			var content=domConstruct.create("div",{className:"muiCalendarListContent"},this.containerNode);
			
			//时间轴
			var em=domConstruct.create("em",{className:"arrow_dot"},content);
			domConstruct.create("i",{className:"mui mui-meeting_date"},em);
			
			var format=msg['mui.date.format.datetime'];//'yyyy-MM-dd HH:mm'
			if(this.allDay){
				format=msg['mui.date.format.date'];//'yyyy-MM-dd'
			}
			var _start=locale.parse(this.start,{selector : 'time',timePattern : format}),
				_end=locale.parse(this.end,{selector : 'time',timePattern : format}),
				_date='';
				
			if(dateUtil.compare(_start,_end,'date') != 0 ){//跨天,显示MM-dd HH:mm ~ {MM-dd HH:mm}
				var tp=this.allDay?'':msg['mui.date.format.time'];
				tp='MM-dd '+tp;
				_start=locale.format(_start,{selector : 'time',timePattern : tp });
				_end=locale.format(_end,{selector : 'time',timePattern : tp });
				_date=_start+' ~ '+_end;
			}else{//非跨天,显示HH:mm ~ {HH:mm}
				_start=locale.format(_start,{selector : 'time',timePattern : msg['mui.date.format.time'] });
				_end=locale.format(_end,{selector : 'time',timePattern : msg['mui.date.format.time'] });
				_date=_start+' ~ '+_end;
				if(this.allDay){
					_date='全天';
				}
			}
			
			
			var _p=domConstruct.create("p", { className: "date",innerHTML : _date }, content);//时间
			
			var title=domConstruct.create("p", { className: "title"}, content);//标题
			domConstruct.create("a", {innerHTML:this.title}, title);
			
			//标签
			if(this.labelId){
				var labelDom=domConstruct.create("div", { className: "muiCalendarLabel ",innerHTML:this.labelName}, content);
				domStyle.set(labelDom,'background-color',this.color);
			}else{
				domConstruct.create("div", { className: "muiCalendarLabel muiCalendarDefaultLabel",innerHTML:'我的日历'}, content);
			}
			
			
			this.href='/km/calendar/km_calendar_main/kmCalendarMain.do?method=view&fdId='+this.id;
		},
		
		startup:function(){
			if(this._started){ return; }
			this.inherited(arguments);
		},
	
		_setLabelAttr: function(text){
			if(text)
				this._set("label", text);
		},
		
		//url加入当前选中日期参数
		makeUrl:function(){
			var url=this.inherited(arguments),
				parent=this.getParent();
			if(parent){
				var _cd=cutil.formatDate(parent.currentDate);
				url=util.setUrlParameter(url,'currentDate',_cd);
			}
			return url;
		}
		
	});
	return item;
});
},
'km/calendar/mobile/resource/js/GroupSelect':function(){
define(['dojo/_base/declare','dijit/_WidgetBase','mui/form/_StoreFormMixin','dojox/mobile/Tooltip',
        'dojo/dom-construct','dojo/dom-class','dojo/dom-attr','dojo/query','mui/util'],
		function(declare,WidgetBase,_StoreFormMixin,Tooltip,domConstruct,domClass,domAttr,query,util){
	
	return declare('km.calendar.mobile.resource.js.GroupSelect',[WidgetBase,_StoreFormMixin],{
		
		prefix:'_GroupSelectItem_',
		
		openUrl:'',
		
		buildRendering : function() {
			this.inherited(arguments);
			domClass.add(this.domNode,'muiCalendarGroupSelect');
			this.textNode=domConstruct.create('span',{className:'muiCalenarGroupSelectText'},this.domNode);
			domConstruct.create('i',{className:'mui mui-down-n'},this.domNode)
			this.bindEvent();
		},
		
		generateList : function(items) {
			this.formatValues(items);
			this.set('value', this.value);
		},
		
		// 格式化数据
		formatValues : function(values) {
			this.values=values;
		},
		
		_setValueAttr:function(value){
			this.textNode.innerHTML=this.getTextByValue(value);
		},
		
		getTextByValue:function(value){
			var text = '';
			if (value == undefined)
				return text;
			for(var i=0;i<this.values.length;i++){
				if(value==this.values[i].id){
					text=this.values[i].name;
					break;
				}
			}
			return text;
		},
		
		bindEvent:function(){
			this.connect(this.domNode, 'touchend', 'toggleOpener');
		},
		
		toggleOpener:function(){
			var self=this;
			if(!this.opener){
				//构建opener
				this.opener = new Tooltip();
				domConstruct.place(this.opener.domNode,document.body, "last");
				domClass.add(this.opener.domNode, 'muiNavBarGroup muicalendarGroup');
				var cover = this.opener.containerNode;
				domConstruct.create('div', {className : 'muiCalendarGroupontainer muiNavBarGroupContainer'}, cover);
				//构建opener内容
				for(var i=0;i<this.values.length;i++){
					var _item=domConstruct.create('div',{
						className:'muiCalendarGroupItem muiNavBarGroupItem' 
					});
					if(this.values[i].id==this.value){
						domClass.add(_item,'selected');
					}
					this.connect(_item,'click',function(evt){
						var url=util.setUrlParameter(self.openUrl,'groupId',domAttr.get(evt.target,'groupId'));
						window.open(url,'_self');
					});
					
					domConstruct.create('div',{
						groupId:this.values[i].id,
						innerHTML:this.values[i].name,
						className:'muiNavBarGroupItemInner'
					},_item);
					
					domConstruct.place(_item,query('.muiCalendarGroupontainer',self.opener.containerNode)[0] ,"last");
				}
			}
			if (this.opener.resize) {
				this.opener.hide();
			}else {
				this.opener.show(this.domNode,['below']);
			}
			this.handle = this.connect(document.body, 'touchend', 'unClick');
			this.handle = this.connect(document.body, 'click', 'unClick');
		},
		
		hideOpener:function(){
			var opener = this.opener;
			if(opener && opener.resize){
				opener.hide();
			}
		},
		// 点击页面其他地方隐藏弹出层
		unClick : function(evt) {
			var target = evt.target, isHide = true;
			while (target) {
				if (target == this.domNode) {
					isHide = false;
					break;
				}
				target = target.parentNode;
			}
			if (isHide) 
				this.defer(function() {
					this.hideOpener();
				}, 1);
			this.disconnect(this.handle);
		}
		
		
		
		
	});
	
	
});
},
'km/calendar/mobile/resource/js/GroupJsonStoreList':function(){
define([
    "dojo/_base/declare",
    "dojo/topic",
    'dojo/when',
    "mui/calendar/CalendarJsonStoreList",
	"dojo/date",
	"mui/util",
	'dojo/_base/lang',
	"dojo/request",
	"mui/calendar/CalendarUtil"
	], function(declare,topic,when,CalendarJsonStoreList,dateClz,util,lang,request,cutil) {
	
	return declare("km.calendar.mobile.resource.js.GroupJsonStoreList", [CalendarJsonStoreList], {
		
		//群组日历的数据格式跟标准日历数据格式不一致,覆盖处理...
		formatData:function(datas){
			var data=[];
			var calendars=datas.data.calendars;
			for(var key in calendars){
				data=data.concat(calendars[key]);
			}
			return data;
		}
		
		
	});
});
}
}});