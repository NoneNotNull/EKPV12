require({cache:{
'km/imeeting/mobile/resource/js/list/MeetingCardItemListMixin':function(){
define([
    "dojo/_base/declare",
	"mui/list/_TemplateItemListMixin",
	"km/imeeting/mobile/resource/js/list/item/MeetingCardItemMixin"
	], function(declare, _TemplateItemListMixin, CardItemMixin) {
	
	return declare("km.imeeting.list.MeetingCardItemListMixin", [_TemplateItemListMixin], {
		itemTemplateString : null,
		itemRenderer: CardItemMixin
	});
});
},
'km/imeeting/mobile/resource/js/CriteriaButtonGroup':function(){
define(["dojo/_base/declare",
        "dojo/dom-style",
        "dojo/dom-class",
        "dojo/dom-construct",
        "dojo/topic",
        "mui/tabbar/TabBarButtonGroup"],
		function(declare,domStyle,domClass,domConstruct,topic,TabBarButtonGroup){
	
	return declare("km.imeeting.mobile.resource.js._TabBarButtonGroupMixin", [TabBarButtonGroup], {
		
		criteriaType:'',//当前选中节点
		criteriaText:'全部',
		
		buildRendering:function(){
			this.inherited(arguments);
			//当前选中节点设置
			this.subscribe('/km/imeeting/onFeedbackCriteria',function(widget){
				this.criteriaType=widget.criteriaType;
				this.criteriaText=widget.criteriaText;
			});
			//数据请求结束后显示label
			this.subscribe('/mui/list/loaded', function(widget){
				if(!this.countLabel){
					this.countLabel=domConstruct.create('span',{className:'' },this.domNode,'before');
				}
				this.countLabel.innerHTML=this.criteriaText+'（'+ widget.totalSize +'）';
				topic.publish('/km/imeeting/feedbackCriteriaSelect',this.criteriaType);
			});
		},
		
		startup :function(){
			this.inherited(arguments);
			domClass.add(this.domNode,'muiMeetingFeedbackCriteria');//筛选按钮
			domClass.add(this.openerContainer.domNode,'muiMeetingFeedbackOpener');//弹出框
		},
		
		//重写打开opener
		_onClick:function(evt){
			var opener = this.openerContainer;
			if (opener.resize)
				this.hideOpener(this);
			else
				opener.show(this.iconDivNode?this.iconDivNode:this.domNode, ['below']);
			this.defaultClickAction(evt);
			this.handle = this.connect(document.body, 'touchend', 'unClick');
		}
		
	});
	
	
	
});
},
'km/imeeting/mobile/resource/js/list/item/CalendarItemMixin':function(){
define([
    "dojo/_base/declare",
    "dojo/dom-construct",
    "dojo/dom-class",
	"dojo/dom-style",
	"dojo/dom-attr",
    "dojox/mobile/_ItemBase",
   	"mui/util",
   	"mui/list/item/_ListLinkItemMixin",
	"dojo/date/locale" ,
	"dojo/date",
	"mui/i18n/i18n!sys-mobile"
	], function(declare, domConstruct,domClass , domStyle , domAttr , ItemBase , util, _ListLinkItemMixin,locale,dateUtil,msg) {
	
	var item = declare("km.imeeting.list.item.CalendarItemMixin", [ItemBase, _ListLinkItemMixin], {
		tag:"li",
		
		baseClass:"muiListItem muiImeetingItem",
		
		href : '',
		
		
		//主持人
		fdHost:"",
		
		//地点
		fdPlaceId:"",
		fdPlaceName:"",
		
		status:"",
		
		buildRendering:function(){
			this.inherited(arguments);
			
			this.domNode = this.containerNode= this.srcNodeRef
				|| domConstruct.create(this.tag,{className:this.baseClass});
			
			//右侧内容
			var content=domConstruct.create("div",{className:"muiMeetingListContent"},this.containerNode);
			
			//时间轴
			var em=domConstruct.create("em",{className:"arrow_dot"},content);
			domConstruct.create("i",{className:"mui mui-meeting_date"},em);
			
			var _start=locale.parse(this.start,{selector : 'time',timePattern : msg['mui.date.format.datetime'] }),
				_end=locale.parse(this.end,{selector : 'time',timePattern : msg['mui.date.format.datetime'] }),
				_format=msg['mui.date.format.time'];
			if(dateUtil.compare(_start,_end,'date') != 0 ){//跨天,显示MM-dd HH:mm ~ {MM-dd HH:mm}
				_format= 'MM-dd HH:mm' ;
			}
			_start=locale.format(_start,{selector : 'time',timePattern :_format }),
			_end=locale.format(_end,{selector : 'time',timePattern : _format });
			
			var _p=domConstruct.create("p", { className: "date",innerHTML:_start+' ~ '+_end}, content);//时间
			
			var title=domConstruct.create("p", { className: "title"}, content);//标题
			domConstruct.create("a", {innerHTML:this.title}, title);
			
			_p=domConstruct.create("p", { className: "address"}, content);//地点
			domConstruct.create("i", { className:"mui mui-meeting_path" }, _p);
			domConstruct.create("span", { innerHTML:this.fdPlaceName }, _p);
			
			var user=domConstruct.create("div", { className: "user"}, content);//用户
			
			if(this.fdHost){
				var _span=domConstruct.create("div", { className: "figure"}, user);
				domConstruct.create("img", { src: this.hostsrc}, _span);//用户头像
				domConstruct.create("a", { className: "",innerHTML:this.fdHost}, user);//用户名
			}
			
			domConstruct.create("div", { className: "muiMeetingStatus "+this.status,innerHTML:this.statusText}, content);
			
			
			
		},
		
		startup:function(){
			if(this._started){ return; }
			this.inherited(arguments);
		},
	
		_setLabelAttr: function(text){
			if(text)
				this._set("label", text);
		}
	});
	return item;
});
},
'km/imeeting/mobile/resource/js/list/FeedbackItemListMixin':function(){
define([
    "dojo/_base/declare",
	"mui/list/_TemplateItemListMixin",
	dojoConfig.baseUrl+"km/imeeting/mobile/resource/js/list/item/FeedbackItemMixin.js"
	], function(declare, _TemplateItemListMixin, FeedbackItemMixin) {
	
	return declare("km.imeeting.list.FeedbackItemListMixin", [_TemplateItemListMixin], {
		
		itemTemplateString : null,
		
		itemRenderer: FeedbackItemMixin
	});
});
},
'km/imeeting/mobile/resource/js/CriteriaButton':function(){
define(["dojo/_base/declare",
        "dojo/topic",
        "dojo/dom-class",
        "mui/tabbar/TabBarButton"],
		function(declare,topic,domClass,TabBarButton){
	
	return declare("km.imeeting.mobile.resource.js.CriteriaBarButton", [TabBarButton], {
		
		criteriaType:'',
		
		buildRendering :function(){
			this.inherited(arguments);
			this.criteriaText=this.label;
			domClass.add(this.domNode,'muiMeetingFeedbackCriteriaItem muiNavBarGroupItem');//添加样式
			domClass.add(this.labelNode,'muiNavBarGroupItemInner');//添加样式
			this.subscribe('/km/imeeting/feedbackCriteriaSelect','feedbackCriteriaSelect');
			
		},
		
		onClick : function() {
			if (this.href) {
				location.href = util.formatUrl(this.href);
				return false;
			}
			topic.publish('/km/imeeting/onFeedbackCriteria',this,{criteriaType :this.criteriaType, criteriaText :this.criteriaText});
			this.inherited(arguments);
		},
		
		feedbackCriteriaSelect:function(criteriaType){
			domClass.remove(this.domNode,'selected');
			if(this.criteriaType == criteriaType){
				domClass.add(this.domNode,'selected');
			}
		}
		
		
		
	});
	
	
	
});
},
'km/imeeting/mobile/resource/js/list/FeedbackJsonStoreList':function(){
define([
    "dojo/_base/declare",
    "dojo/topic",
	"mui/list/JsonStoreList"
	], function(declare,topic, JsonStoreList) {
	
	return declare("km.imeeting.list.FeedbackJsonStoreList", [JsonStoreList], {
		
		
		onComplete:function(){
			this.inherited(arguments);
			var parentView=this.getParent();
			//手动控制push的显示与隐藏，防止其他view页面也出现push提示信息
			topic.publish('/mui/list/pushDomHide',parentView);
		},
		
		//重写下拉刷新事件
		handleOnPush: function(widget, handle) {
			var parentView=this.getParent();
			if(parentView.isVisible()){
				if(!this._loadOver){
					topic.publish('/mui/list/pushDomShow',parentView);
					this.loadMore(handle);
				}
			}
			if (handle)
				handle.done(this);
		},
		
		//暂时没在dojo找到对应的api
		_setUrlParameter:function(url, param, value){
			var re = new RegExp();
			re.compile("([\\?&]"+param+"=)[^&]*", "i");
			if(value==null){
				if(re.test(url)){
					url = url.replace(re, "");
				}
			}else{
				value = encodeURIComponent(value);
				if(re.test(url)){
					url = url.replace(re, "$1"+value);
				}else{
					url += (url.indexOf("?")==-1?"?":"&") + param + "=" + value;
				}
			}
			if(url.charAt(url.length-1)=="?")
				url = url.substring(0, url.length-1);
			return url;
		},
		
		startup:function(){
			this.inherited(arguments);
			this.subscribe('/km/imeeting/onFeedbackCriteria', 'onFeedbackCriteria');
		},
		
		//回执单筛选
		onFeedbackCriteria:function(widget){
			criteriaType=widget.criteriaType || "";
			this.url = this._setUrlParameter(this.url,"criteriaType",criteriaType);
			this.reload();
		},
		
	});
});
},
'km/imeeting/mobile/resource/js/list/CalendarItemListMixin':function(){
define([
    "dojo/_base/declare",
	"mui/list/_TemplateItemListMixin",
	dojoConfig.baseUrl+"km/imeeting/mobile/resource/js/list/item/CalendarItemMixin.js"
	], function(declare, _TemplateItemListMixin, KmImeetingItemMixin) {
	
	return declare("km.imeeting.list.CalendarItemListMixin", [_TemplateItemListMixin], {
		
		itemTemplateString : null,
		
		itemRenderer: KmImeetingItemMixin
	});
});
},
'km/imeeting/mobile/resource/js/list/item/MeetingCardItemMixin':function(){
define([
    "dojo/_base/declare",
    "dojo/dom-construct",
    "dojo/dom-class",
	"dojo/dom-style",
	"dojo/dom-attr",
    "dojox/mobile/_ItemBase",
   	"mui/util",
   	"dojo/on",
   	"mui/dialog/Tip", 
   	"mui/list/item/_ListLinkItemMixin"
	], function(declare, domConstruct,domClass , domStyle , domAttr , ItemBase , util,on,Tip, _ListLinkItemMixin) {
	var item = declare("mui.list.item.CardItemMixin", [ItemBase, _ListLinkItemMixin], {
		tag:"li",
		
		baseClass:"muiCardItem muiListItem muiMeetingCardItem",

		buildRendering:function(){
			this.domNode = domConstruct.create('li', {className : ''}, this.containerNode);
			this.inherited(arguments);
			this.buildInternalRender();
		},
		buildInternalRender : function() {
			var itemClass = this.href ? {}:{className:'lock'};
			this.contentNode = domConstruct.create('a', itemClass, this.domNode);
			
			var head = domConstruct.create("div",{className:"figure"},this.contentNode);
			//Personal picture
			if(this.icon){
				var span = domConstruct.create("span",{className:"figureImgW"},head);
				domConstruct.create("img", { className: "muiProcessImg",src:this.icon}, span);
			}else{
				var span = domConstruct.create("span",{className:"figureImgW"},head);
				var imgBox = domConstruct.create("div",{className:"imgBox"},span);
				domConstruct.create("i", { className: "mui mui-bookLogo"}, imgBox);
			}
			
			var subject = domConstruct.create("span",{className:"title muiSubject",innerHTML:this.label},head);
			if(this.href){
				this.makeLinkNode(this.contentNode);
			}else{
				//tip
				lock = domConstruct.toDom("<div class='icoLock'><i class='mui mui-todo_lock'></i></div>");
				domConstruct.place(lock, this.contentNode);
				this.makeLockLinkTip(this.contentNode);
			}
			var subhead = domConstruct.create("p",{className:"muiCardSummary muiListSummary"},this.contentNode);
			var ul = domConstruct.create("ul",{className:"muiCardIcoList"},subhead);
			if(this.created){
				var li = domConstruct.toDom("<li><i class='mui mui-meeting_date'></i>" + this.created + "</li>");
				domConstruct.place(li, ul);
			}
			if(this.host){
				var li = domConstruct.toDom("<li><i class='mui mui-person'></i>" + this.host + "</li>");
				domConstruct.place(li, ul);
			}
			if(this.place){
				var li = domConstruct.toDom("<li><i class='mui mui-meeting_path'></i>" + this.place + "</li>");
				domConstruct.place(li, ul);
			}
			
			//状态
			if(this.status){
				var __div = domConstruct.toDom(this.status);
				domConstruct.place(__div,this.contentNode);
			}else{
				domClass.add(head,'noStatusFigure')
			}
			
		},
		
		makeLockLinkTip:function(linkNode){
			this.href='javascript:void(0);';
			on(linkNode,'click',function(evt){
				Tip.tip({icon:'mui mui-warn', text:'暂不支持移动访问'});
			});
		},
		
		startup:function(){
			if(this._started){ return; }
			this.inherited(arguments);
		},
	
		_setLabelAttr: function(text){
			if(text)
				this._set("label", text);
		}
	});
	return item;
});
},
'km/imeeting/mobile/resource/js/list/item/FeedbackItemMixin':function(){
define([
    "dojo/_base/declare",
    "dojo/dom-construct",
    "dojo/dom-class",
	"dojo/dom-style",
	"dojo/dom-attr",
    "dojox/mobile/_ItemBase",
   	"mui/util",
   	"mui/i18n/i18n",
   	"mui/list/item/_ListLinkItemMixin"
	], function(declare, domConstruct,domClass , domStyle , domAttr , ItemBase , util,i18n, _ListLinkItemMixin) {
	
	var item = declare("km.imeeting.list.item.FeedbackItemMixin", [ItemBase, _ListLinkItemMixin], {
		tag:"li",
		
		baseClass:"muiMeetingListItem",
		
		href : 'javascript:;',
		
		//发布时间
		created:"",
		
		//参与人
		creator:"",
		
		//实际参与人
		attend:"",
		
		//参与人头像
		icon:"",
		
		//
		opt:"",
		
		buildRendering:function(){
			this.inherited(arguments);
			
			//左侧头像
			var figure=domConstruct.create("div",{className:"figure"},this.containerNode);
			var _a=domConstruct.create("a", { }, figure);
			domConstruct.create("img", { className: "muiFeedbackImg",src:this.icon}, _a);
			var optClassName="",
				optName="",
				optIcon="";
			switch(this.opt){
				case "01":
					optClassName="attend";
					optName="参加";
					optIcon="mui-meeting_attend";
					break;
				case "02":
					optClassName="unAttend";
					optName="不参加";
					optIcon="mui-meeting_unAttend";
					break;
				case "03":
					optClassName="proxy";
					optName="代理";
					optIcon="mui-meeting_proxy";
					break;
				default:
					optClassName="noOpt";
					optName="未回执";
					optIcon="mui-meeting_noOpt";
			}
			var _span=domConstruct.create("span", { className: "figureTag "+optClassName}, _a);
			domConstruct.create("i", { className: "mui "+optIcon}, _span);
			
			//右侧内容
			var content=domConstruct.create("div",{className:"muiFeedBackContent"},this.containerNode);
			_a=domConstruct.create("a", {className:"name"}, content);
			if(this.opt=='03' && this.attend){
				domConstruct.create("em", {className:"agent",innerHTML:this.attend}, _a);//实际参与人
				domConstruct.create("i", {className:"agenIcon",innerHTML:"代"}, _a);
			}
			domConstruct.create("span", {innerHTML:this.creator}, _a);//参与人
			
			if(this.fdReason){
				domConstruct.create("p", {className:"info",innerHTML:this.fdReason }, content);//回执留言
			}
			var _p=domConstruct.create("p", {innerHTML:this.dept }, content);//部门
			domConstruct.create("i",{className:"mui mui-depart"},_p,"first");
			domConstruct.create("a", {className:"feedBackBtn "+optClassName,innerHTML:optName }, content);//回执类型
			
		},
		
		startup:function(){
			if(this._started){ return; }
			this.inherited(arguments);
		},
	
		_setLabelAttr: function(text){
			if(text)
				this._set("label", text);
		}
	});
	return item;
});
}
}});